{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "(SO0027 - Sample Nested Stack) AWS Serverless Bot Framework %%VERSION%%. **NOTICE** Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved. Licensed under the Amazon Software License (the License). You may not use this file except in compliance with the License. A copy of the License is located at http://aws.amazon.com/asl/ or in the license file accompanying this file. This file is distributed on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions and limitations under the License.",
  "Parameters": {
    "AccessIpAddress": {"Type": "String"}
  },
  "Conditions": {
    "OpenAccess": {"Fn::Equals": [{"Ref": "AccessIpAddress"}, "0.0.0.0/0"]}
  },
  "Resources": {
    "WebClient": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead",
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "error.html"
        }
      }
    },
    "WebClientBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Condition": "OpenAccess",
      "Properties": {
        "Bucket": {
          "Ref": "WebClient"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Sid": "AddPerm",
            "Effect": "Allow",
            "Principal": "*",
            "Action": "s3:GetObject",
            "Resource": {
              "Fn::Join": ["", ["arn:aws-cn:s3:::", {
                "Ref": "WebClient"
              }, "/*"]]
            },
            "Condition": {
              "IpAddress": {
                "aws:SourceIp": {
                  "Ref": "AccessIpAddress"
                }
              }
            }
          }]
        }
      }
    },

    "LambdaBasicExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "lambda.amazonaws.com"
              ]
            },
            "Action": [
              "sts:AssumeRole"
            ]
          }]
        },
        "Policies": [{
          "PolicyName": "CloudWatchLogs",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams"
              ],
              "Resource": {
                "Fn::Join": [":", ["arn:aws-cn:logs", {
                  "Ref": "AWS::Region"
                }, {
                  "Ref": "AWS::AccountId"
                }, "log-group:/aws/lambda/*"]]
              }
            }]
          }
        }]
      }
    },
    "KnowledgeWeatherForecast": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": ["LambdaBasicExecutionRole"],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "-", [
                "%%BUCKET_NAME%%",
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "S3Key": "serverless-bot-framework/%%VERSION%%/sample-bot-weather-forecast.zip"
        },
        "Description": "Sample - Weather Forecast",
        "Handler": "index.lambda_handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "LambdaBasicExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Timeout": 10
      }
    },
    "KnowledgePasswordReset": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": ["LambdaBasicExecutionRole"],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "-", [
                "%%BUCKET_NAME%%",
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "S3Key": "serverless-bot-framework/%%VERSION%%/sample-bot-password-reset.zip"
        },
        "Description": "Sample - Password Reset",
        "Handler": "index.lambda_handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "LambdaBasicExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Timeout": 60
      }
    }
  },

  "Outputs": {
    "WebClient": {
      "Description": "Sample web client bucket name.",
      "Value": {"Ref": "WebClient"}
    },
    "WebClientArn": {
      "Description": "Sample web client ARN.",
      "Value": {"Fn::GetAtt": ["WebClient", "Arn"]}
    },
    "WebClientDualStackDomainName": {
      "Description": "Sample web client dual stack domain name.",
      "Value": {"Fn::GetAtt": ["WebClient", "DualStackDomainName"]}
    },
    "KnowledgeWeatherForecast": {
      "Description": "Knowledge weather forecast function name.",
      "Value": {"Ref": "KnowledgeWeatherForecast"}
    },
    "KnowledgeWeatherForecastArn": {
      "Description": "Knowledge weather forecast function ARN.",
      "Value": {"Fn::GetAtt": ["KnowledgeWeatherForecast", "Arn"]}
    },
    "KnowledgePasswordReset": {
      "Description": "Knowledge password reset function name.",
      "Value": {"Ref": "KnowledgePasswordReset"}
    },
    "KnowledgePasswordResetArn": {
      "Description": "Knowledge password reset function ARN.",
      "Value": {"Fn::GetAtt": ["KnowledgePasswordReset", "Arn"]}
    }
  }
}
